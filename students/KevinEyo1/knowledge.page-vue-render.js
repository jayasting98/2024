
    const renderFn = new Function("const { createElementVNode: _createElementVNode, createTextVNode: _createTextVNode, resolveComponent: _resolveComponent, withCtx: _withCtx, createVNode: _createVNode, createStaticVNode: _createStaticVNode, Fragment: _Fragment, openBlock: _openBlock, createElementBlock: _createElementBlock } = Vue\n\nconst _hoisted_1 = { fixed: \"\" }\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"a\", {\n  href: \"/2024/index.html\",\n  title: \"Home\",\n  class: \"navbar-brand\"\n}, \"CS3281&2-2024/Students\", -1 /* HOISTED */)\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/index.html\",\n    class: \"dropdown-item\"\n  }, \"Students\")\n], -1 /* HOISTED */)\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/students/knowledge.html\",\n    class: \"dropdown-item\"\n  }, \"Knowledge\")\n], -1 /* HOISTED */)\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://nus-cs3281.github.io/2024-dashboard/?search=&sort=groupTitle&sortWithin=title&timeframe=commit&mergegroup=&groupSelect=groupByAuthors&breakdown=false\",\n    class: \"dropdown-item\"\n  }, \"Code Dashboard\")\n], -1 /* HOISTED */)\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/activities-dashboard.html\",\n    class: \"dropdown-item\"\n  }, \"Activities Dashboard\")\n], -1 /* HOISTED */)\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/cs3282-index.html\",\n    class: \"dropdown-item\"\n  }, \"Students\")\n], -1 /* HOISTED */)\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/students/talksSchedule.html\",\n    class: \"dropdown-item\"\n  }, \"Lightning Talks\")\n], -1 /* HOISTED */)\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/activities-dashboard.html\",\n    class: \"dropdown-item\"\n  }, \"Activities Dashboard\")\n], -1 /* HOISTED */)\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"/2024/instructions.html\",\n    class: \"nav-link\"\n  }, \"Instructions\")\n], -1 /* HOISTED */)\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://nus-cs3281.github.io/website/\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createTextVNode(\"CS3281&2 Website \"),\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"span\", {\n        \"aria-hidden\": \"true\",\n        class: \"glyphicon glyphicon-share-alt\"\n      })\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"li\", null, [\n  /*#__PURE__*/_createElementVNode(\"a\", {\n    href: \"https://github.com/nus-cs3281/2024\",\n    class: \"nav-link\"\n  }, [\n    /*#__PURE__*/_createElementVNode(\"span\", null, [\n      /*#__PURE__*/_createElementVNode(\"span\", {\n        \"aria-hidden\": \"true\",\n        class: \"fab fa-github\"\n      })\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_13 = { id: \"flex-body\" }\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"content-wrapper\",\n  class: \"fixed-header-padding\"\n}, [\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"summary-of-key-contributions\" }, [\n    /*#__PURE__*/_createTextVNode(\"Summary of Key Contributions\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#summary-of-key-contributions\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Worked on adding \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2400\" }, \"Software Project Documentation\"),\n    /*#__PURE__*/_createTextVNode(\" template to MarkBind, allowing for users to have a starting point for using MarkBind in their project documentation.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Researched into possible integrations of \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/issues/2448\" }, \"Bun\"),\n    /*#__PURE__*/_createTextVNode(\" and \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/issues/2359\" }, \"Bootstrap v5.2 and v5.3\"),\n    /*#__PURE__*/_createTextVNode(\" into MarkBind, to determine the value and feasibility of these integrations.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Worked on \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2454\" }, \"customizing list icons\"),\n    /*#__PURE__*/_createTextVNode(\", such that icons for list items can be customized to apply to the current item only instead of default inheritance to future items.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Worked largely on DevOps side of MarkBind, utilizing GitHub Actions and workflows to handle automation of tasks. These tasks include checking for \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2429\" }, \"commit messages in PR descriptions\"),\n    /*#__PURE__*/_createTextVNode(\", \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2470\" }, \"SEMVER impact labels\"),\n    /*#__PURE__*/_createTextVNode(\", \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2484\" }, \"reminding adding of new contributors to contributor list\"),\n    /*#__PURE__*/_createTextVNode(\".\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/issues/2140\" }, \"Researched\"),\n    /*#__PURE__*/_createTextVNode(\" and \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2523\" }, \"implemented\"),\n    /*#__PURE__*/_createTextVNode(\" the use of DangerJS to automate checking of changes coupling of implementation files to test or documentation files, to ensure that any changes to the repository is properly documented and tested.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Researched into the implementation of automating \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/issues/2495\" }, \"unassigning of assigned users to issues\"),\n    /*#__PURE__*/_createTextVNode(\" after a certain period of inactivity.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Researched into \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/issues/2488\" }, \"common security practices\"),\n    /*#__PURE__*/_createTextVNode(\" for GitHub Actions, and \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2510\" }, \"implementing these practices\"),\n    /*#__PURE__*/_createTextVNode(\" into the MarkBind repository. These practices are also \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/MarkBind/markbind/pull/2528\" }, \"documented\"),\n    /*#__PURE__*/_createTextVNode(\" for future contributors to the project.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"markbind-codebase\" }, [\n    /*#__PURE__*/_createTextVNode(\"MarkBind codebase\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#markbind-codebase\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Learned the underlying workings and how different parts of the codebase are linked together to provide MarkBind's functionalities. From the parser to the renderer, and the different plugins that can be used to extend MarkBind's capabilities. Learned how to implement new features, adding relevant test and documentation to ensure that the codebase is maintainable and modifiable.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"github-actions\" }, [\n    /*#__PURE__*/_createTextVNode(\"GitHub Actions\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#github-actions\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Learned how GitHub Actions fits into the development workflow, and how to use it to automate tasks. I used the GitHub Actions documentation to learn about the different types of workflows, how to create and configure workflows, and how to use the different actions available.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.github.com/en/actions\" }, \"GitHub Actions Documentation\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": GitHub Actions makes it easy to automate all your software workflows, now with world-class CI/CD. Build, test, and deploy your code right from GitHub. Make code reviews, branch management, and issue triaging work the way you want.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions\" }, \"GitHub Actions Workflow Syntax\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": GitHub Actions uses YAML syntax to define the events, jobs, and steps that make up your workflow. You can create a custom workflow or use a starter workflow template to get started.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.github.com/en/actions/security-guides/automatic-token-authentication\" }, \"GITHUB_TOKEN\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": The GITHUB_TOKEN is a GitHub Actions token that is automatically generated by GitHub and used to authenticate in a workflow run. It is scoped to the repository that contains the workflow file, and can be used to perform read and write operations on the repository. It is automatically available to your workflow and does not need to be stored as a secret.\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Learned yaml and bash for creation of workflows.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://www.cloudbees.com/blog/yaml-tutorial-everything-you-need-get-started\" }, \"YAML Syntax\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": YAML is a human-readable data serialization standard that can be used in conjunction with all programming languages and is often used to write configuration files. It can also be used in workflows to define the structure of the workflow, including the events, jobs, and steps that make up the workflow.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://devhints.io/bash\" }, \"Bash Scripting\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": Bash is a Unix shell and command language written by Brian Fox for the GNU Project as a free software replacement for the Bourne shell. It has been distributed widely as the shell for the GNU operating system and as a default shell on Linux and OS X.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://web.archive.org/web/20230408142504/https://wiki.bash-hackers.org/syntax/pe\" }, \"Bash Parameter Expansion\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": Parameter expansion is a way to manipulate variables in Bash. It is a form of variable substitution that allows for the manipulation of variables in various ways.\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Learned how to use other actions in workflows, such as the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions/checkout\"),\n    /*#__PURE__*/_createTextVNode(\" action to check out a repository onto the runner, allowing subsequent steps to execute operations on the checked-out repository.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n      /*#__PURE__*/_createTextVNode(\": \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/marketplace\" }, \"GitHub Marketplace\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n      /*#__PURE__*/_createTextVNode(\": The GitHub Marketplace is a collection of actions that can be used in your workflows. You can search for actions by category, language, or other criteria, and use them in your workflows to automate tasks.\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Learned how to use DangerJS to aid with workflows.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n      /*#__PURE__*/_createTextVNode(\": \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://danger.systems/js/\" }, \"DangerJS\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n      /*#__PURE__*/_createTextVNode(\": Danger runs during your CI process, and helps with automating common code review chores. This provides another layer of automation over the code review process, ensuring that all changes are properly documented and tested.\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"When to create new workflows (outside of modifiability)\"),\n    /*#__PURE__*/_createTextVNode(\"\\nAlthough keeping multiple jobs within the same workflow file is possible, sometimes it may be better not to. Jobs are run based on event triggers such as pull requests etc, but you must add it to the top. This meant that if you had multiple jobs in the same workflow file, they would all run when the event trigger was activated. If you wanted a trigger to only trigger a specific job, you would need to add a check to exclude all other jobs from that trigger.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Pull request trigger by default has the types \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"opened\"),\n    /*#__PURE__*/_createTextVNode(\", \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"synchronize\"),\n    /*#__PURE__*/_createTextVNode(\", and \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"reopened\"),\n    /*#__PURE__*/_createTextVNode(\".\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Testing and debugging workflows\"),\n    /*#__PURE__*/_createTextVNode(\"\\nThis can be done locally with the help of Docker and act.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Benefits of local testing:\\nFast Feedback - Avoid commit/push every time you want to test out the changes.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://nektosact.com/usage/index.html\" }, \"Act Usage\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\": Act reads in your GitHub Actions from .github/workflows/ and determines the set of actions that need to be run. It uses the Docker API to either pull or build the necessary images, as defined in your workflow files and finally determines the execution path based on the dependencies that were defined. Once it has the execution path, it then uses the Docker API to run containers for each action based on the images prepared earlier.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n        /*#__PURE__*/_createTextVNode(\": \"),\n        /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.docker.com/get-started/overview/\" }, \"Docker Docs\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n        /*#__PURE__*/_createTextVNode(\":\")\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Steps (PR):\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, \"Download act and Docker.\"),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, \"Start up Docker daemon.\"),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, \"Create a JSON file with the appropriate PR file structure (can use python script to generate it).\"),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"Run \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"act pull_request -j specific-job -e pr-event.json\"),\n      /*#__PURE__*/_createTextVNode(\" to run a specific job on the PR event environment.\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"keywords\" }, [\n    /*#__PURE__*/_createTextVNode(\"Keywords\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#keywords\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"uses\"),\n    /*#__PURE__*/_createTextVNode(\":\\nCan be used to reference an action in the same repository, a public repository, or a published Docker container image. The \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"uses\"),\n    /*#__PURE__*/_createTextVNode(\" keyword can also be used to reference an action in a private repository by specifying the repository using the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"repository\"),\n    /*#__PURE__*/_createTextVNode(\" keyword.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"env\"),\n    /*#__PURE__*/_createTextVNode(\":\\nIt is best to avoid having expressions \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"${{ }}\"),\n    /*#__PURE__*/_createTextVNode(\"  in \"),\n    /*#__PURE__*/_createElementVNode(\"em\", null, \"run\"),\n    /*#__PURE__*/_createTextVNode(\" portion of a step. Instead, \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"env\"),\n    /*#__PURE__*/_createTextVNode(\" allows defining of variables that store the expression.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"awk\"),\n    /*#__PURE__*/_createTextVNode(\" :\\nCan be used to extract a section of body, from a line containing \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"START\"),\n    /*#__PURE__*/_createTextVNode(\" to a line containing \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"END\"),\n    /*#__PURE__*/_createTextVNode(\" (inclusive of full line).\\n\"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"section=$(echo \\\"$body\\\" | awk '/START/,/END/')\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"use-of-third-party-actions\" }, [\n    /*#__PURE__*/_createTextVNode(\"Use of third-party actions\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#use-of-third-party-actions\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n      /*#__PURE__*/_createTextVNode(\": \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/marketplace?type=actions\" }, \"GitHub Actions Marketplace\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Summary\"),\n      /*#__PURE__*/_createTextVNode(\": The GitHub Actions Marketplace is a collection of actions that can be used in your workflows. You can search for actions by category, language, or other criteria, and use them in your workflows to automate tasks.\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Useful actions:\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"table-responsive\" }, [\n    /*#__PURE__*/_createElementVNode(\"table\", { class: \"markbind-table table table-bordered table-striped\" }, [\n      /*#__PURE__*/_createElementVNode(\"thead\", null, [\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"th\", null, \"Action\"),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"th\", null, \"Description\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"tbody\", null, [\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions/checkout@v3\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Check out a repository onto the runner, allowing subsequent steps to execute operations on the checked-out repository, i.e. gaining access to the repository's code.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions/github-script@v7\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createTextVNode(\"Run a script in the GitHub Actions environment using the GitHub CLI. Refer to \"),\n            /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://octokit.github.io/rest.js/v20\" }, \"here\")\n          ])\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions/setup-node@v3\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Set up a Node.js environment for use in workflows.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions/stale\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Close stale issues and pull requests.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"boundfoxstudios/action-unassign-contributor-after-days-of-inactivity\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Automatically unassign user from issues after a certain period of inactivity.\")\n        ])\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"extra-information-about-how-stale-and-unassign-actions-work-in-the-context-of-markbind\" }, [\n    /*#__PURE__*/_createTextVNode(\"Extra information about how stale and unassign actions work in the context of MarkBind\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#extra-information-about-how-stale-and-unassign-actions-work-in-the-context-of-markbind\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"The definition of inactivity for the GitHub action is any form of history to the issue, be it labeling, comments or references. The action works such that issues and PRs are treated and checked for inactivity separately. This means that any updates done to a PR regarding this issue, will not reset inactivity for the issue.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"How unassign and stale actions work:\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"Stale action adds \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n      /*#__PURE__*/_createTextVNode(\" label to issue or PR based on inactivity (default 60 days)\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"Unassign action routinely checks for this \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n      /*#__PURE__*/_createTextVNode(\" label, then checks whether it's been a set amount of days after the \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n      /*#__PURE__*/_createTextVNode(\" label has been added with no other activity (default 7 days)\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"For issues passing the check before, it un-assigns users and removes \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n      /*#__PURE__*/_createTextVNode(\" label\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/BoundfoxStudios/fairy-tale-defender/blob/develop/.github/workflows/project-management.yml#L105\" }, \"Reference workflow of real-life example\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h5\", { id: \"solution-using-unassign-and-stale-actions\" }, [\n    /*#__PURE__*/_createTextVNode(\"Solution using unassign and stale actions\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#solution-using-unassign-and-stale-actions\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Add the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n    /*#__PURE__*/_createTextVNode(\" label after 6 days and ping a reminder, then have the \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/marketplace/actions/unassign-contributor-after-days-of-inactivity\" }, \"unassign-contributor-after-days-of-inactivity\"),\n    /*#__PURE__*/_createTextVNode(\" run 1 day after.\\nIt can also only check on issues that are actually assigned to someone, so that theres no redundancy.\\n\"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Limitations:\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"Any changes in PR regarding issue will not reset inactivity of issue, meaning if discussion and updates are done on the PR instead of the issue, the issue risks being \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n      /*#__PURE__*/_createTextVNode(\" and the user being unassigned despite them actively working on the PR.\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"It can ping a general reminder (without resetting the inactivity) but it cannot ping the user directly with \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"@username\"),\n      /*#__PURE__*/_createTextVNode(\" in the reminder due to how the code is written. It is possible to separately ping the user in another comment but that will cause a reset in inactivity. This means slightly lower visibility for the reminder.\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h5\", { id: \"improvements-for-limitation-1\" }, [\n    /*#__PURE__*/_createTextVNode(\"Improvements for limitation 1\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#improvements-for-limitation-1\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Building on unassign action, which at some point it might be better off just building our own unassign action for better integration and control\\n\"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Check corresponding PR (requires more implementation)\"),\n    /*#__PURE__*/_createTextVNode(\"\\nAdd additional check before setting \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n    /*#__PURE__*/_createTextVNode(\" label to check if corresponding PR has history.\\nThis can be done through checking the list of open PRs and their descriptions whether it mentions the issue. It can also be done through looking at the issue’s history, for PRs that mention it, then checking the history of those PRs. This should be quite manageable since the number of open PRs at any point of time is still relatively low for Markbind’s scale.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Check corresponding issue (requires more implementation)\"),\n    /*#__PURE__*/_createTextVNode(\"\\nOn any activity in PRs, check description to find issues linked to the PR, so activity on PR can be translated to activity on the issue as well by posting a comment on the corresponding issue or something of that nature. This might require checking for a specific issue that has the user assigned to avoid commenting on relevant but not directly linked issues, if the PR has multiple relevant issues. We can also only call it on commits instead of any activity, so as to avoid over-polluting the issue with comments.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h5\", { id: \"improvements-for-limitation-2\" }, [\n    /*#__PURE__*/_createTextVNode(\"Improvements for limitation 2\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#improvements-for-limitation-2\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Ping after unassign\"),\n    /*#__PURE__*/_createTextVNode(\"\\nSame as before, add \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n    /*#__PURE__*/_createTextVNode(\" level after 6 days, but don't need to ping the user, wait until unassign 1 day after, then ping the user that they have been unassigned and if they are still working on it, ask them to reassign themselves. This would likely fit better with a longer timeline.\\nThis solves the visibility problem as it can directly ping the user as resetting the inactivity after the user has been unassigned wouldn't matter.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Implement our own stale action (requires more implementation)\"),\n    /*#__PURE__*/_createTextVNode(\"\\nImplement a simplified version of stale action that now allows pinging of user before applying the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"Stale\"),\n    /*#__PURE__*/_createTextVNode(\" label.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h4\", { id: \"pull-request-target\" }, [\n    /*#__PURE__*/_createTextVNode(\"pull_request_target\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#pull-request-target\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Due to security reasons, for permissions given to \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"GITHUB_TOKEN\"),\n    /*#__PURE__*/_createTextVNode(\", the maximum access for pull requests from public forked repositories is restricted to only read, so it is not possible to add labels since there is no write access. GitHub introduced the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"pull_request_target\"),\n    /*#__PURE__*/_createTextVNode(\" event that will bypass this restriction and give the token write access.\\nPros:\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, \"It allows labelling of PR\"),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, \"Increased security as base branch workflows can be trusted, protecting job from running modified and malicious workflows\\nCons:\"),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"It can only run on \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"pull_request\"),\n      /*#__PURE__*/_createTextVNode(\" events and not \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"pull_request_review\"),\n      /*#__PURE__*/_createTextVNode(\" events which means need to run on PR merge rather than on PR approved.\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createTextVNode(\"This event runs in the context of the base of the pull request, rather than in the context of the merge commit, as the \"),\n      /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"pull_request\"),\n      /*#__PURE__*/_createTextVNode(\" event does. This could lead to security vulnerabilities if scripts run are not properly checked for malicious code.\\nCan be aided by seeking approval before running the job, refer to \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/enabling-features-for-your-repository/managing-github-actions-settings-for-a-repository#controlling-changes-from-forks-to-workflows-in-public-repositories\" }, \"change repo settings\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h5\", { id: \"alternative-implementations\" }, [\n    /*#__PURE__*/_createTextVNode(\"Alternative implementations\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#alternative-implementations\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://stackoverflow.com/questions/67247752/how-to-use-secret-in-pull-request-review-similar-to-pull-request-target\" }, \"Workaround\"),\n    /*#__PURE__*/_createTextVNode(\"\\nPros: this can allow for still triggering on PR approved\\nCons: immensely complicates the workflow\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Personal Access Token (PAT)\\nCreate a PAT with the necessary permissions and add it to your repository's secrets. Then, modify the workflow to use this secret instead of the \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"GITHUB_TOKEN\"),\n    /*#__PURE__*/_createTextVNode(\".\\nPros: this can allow for still triggering on PR approved\\nCons: exposes your repository to risks if the forked code can access the token\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"github-actions-security\" }, [\n    /*#__PURE__*/_createTextVNode(\"GitHub Actions Security\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#github-actions-security\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ul\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n      /*#__PURE__*/_createTextVNode(\": \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://dev.to/suzukishunsuke/secure-github-actions-by-pullrequesttarget-641\" }, \"Using pull_request_target\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n      /*#__PURE__*/_createTextVNode(\": \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://blog.gitguardian.com/github-actions-security-cheat-sheet/\" }, \"Security and Cheatsheet\")\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"Resource\"),\n      /*#__PURE__*/_createTextVNode(\": \"),\n      /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://securitylab.github.com/research/github-actions-preventing-pwn-requests/\" }, \"Security Lab\")\n    ])\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Specific version tags\"),\n    /*#__PURE__*/_createTextVNode(\"\\nWhen using third-party actions, pin the version with a commit hash rather than a tag to shield your workflow from potential supply-chain compromise, since tags can be adjusted to a malicious codebase state but commit hashes provide immutability.\\nThis can be done by going to the codebase for the specific tag version and looking for the latest commit of the version desired and copying the commit’s full SHA from the url link.\\nUse:\\n\"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"uses: someperson/post-issue@f054a8b5c1271c37293245628f1cae047eff08c9\"),\n    /*#__PURE__*/_createTextVNode(\"\\nInstead of:\\n\"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"uses: someperson/post-issue@v7\"),\n    /*#__PURE__*/_createTextVNode(\"\\nDownside is that the updates must be done by updating the commit hash instead of it being done automatically through moving the tag to a new release.\\nThis can be solved by using tools like Dependabot or Renovatebot by adding a comment of the version used, enabling automated dependency updates. Tools like StepSecurity can also be used.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Minimally scoped credentials\"),\n    /*#__PURE__*/_createTextVNode(\"\\nEvery credential used in the workflow should have the minimum required permissions to execute the job.\\nIn particular, use the ‘permissions’ key to make sure the GITHUB_TOKEN is configured with the least privileges for each job.\\n\"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"permissions\"),\n    /*#__PURE__*/_createTextVNode(\" can be restricted at the repo, workflow or job level.\\n\"),\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Environment variables\"),\n    /*#__PURE__*/_createTextVNode(\", like \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"${{ secrets.GITHUB_TOKEN }}\"),\n    /*#__PURE__*/_createTextVNode(\", should be limited by scope, and should be declared at the step level when possible.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Pull_request_target\"),\n    /*#__PURE__*/_createTextVNode(\" (must be used for write access if PR is from forked repo)\\nDo not use actions/checkout with this as it can give write permission and secrets access to untrusted code. Any building step, script execution, or even action call could be used to compromise the entire repository. This can be fixed by adding code to ensure that the code being checked out belongs to the base branch, which would also be limiting since the code checked out is not up to date for the PR.\\nThis can be done using:\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"pre\", null, [\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs\" }, [\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"- uses: actions/checkout@v4\\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"  with:\\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"    ref: $ \\n\")\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Triggers workflows based on the latest commit of the pull request's base branch.\\nEven if workflow files are modified or deleted on feature branches, workflows on the default branch aren't affected so you can prevent malicious code from being executed in CI without code review.\\nAnother solution that allows \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"pull_request_target\"),\n    /*#__PURE__*/_createTextVNode(\" with \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"actions/checkout\"),\n    /*#__PURE__*/_createTextVNode(\" used on the PR branch, is to add an additional step of running workflow only on approval by trusted users, such that the trusted user has to check the changes in the code from the PR to ensure there is no malicious code before running the workflow.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createElementVNode(\"strong\", null, \"Untrusted input\"),\n    /*#__PURE__*/_createTextVNode(\"\\nDon't directly reference values you do not control, such as \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"echo “${{github.event.pull_request.title}}”\"),\n    /*#__PURE__*/_createTextVNode(\", since it can contain malicious code and lead to an injection attack.\\nInstead use an action with arguments (recommended):\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"pre\", null, [\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs\" }, [\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"uses: fakeaction/printtitle@v3 \\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"with: \\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"title: $\\n\")\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Or bind the value to an intermediate environment variable:\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"pre\", null, [\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs\" }, [\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"env: \\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"PR_TITLE: $\\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"run: | \\n\"),\n      /*#__PURE__*/_createElementVNode(\"span\", null, \"echo “$PR_TITLE” \\n\")\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"p\", null, [\n    /*#__PURE__*/_createTextVNode(\"Use \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.github.com/en/actions/deployment/security-hardening-your-deployments/about-security-hardening-with-openid-connect\" }, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"OIDC\")\n    ]),\n    /*#__PURE__*/_createTextVNode(\" and respective Secrets Manager for access to cloud providers instead of using secrets.\\nUse \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions\" }, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"GitHub Secrets\")\n    ]),\n    /*#__PURE__*/_createTextVNode(\" to store keys securely and reference in workflows using \"),\n    /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"${{}}\"),\n    /*#__PURE__*/_createTextVNode(\".\\nCan use \"),\n    /*#__PURE__*/_createElementVNode(\"a\", { href: \"https://github.com/GitGuardian/ggshield-action?ref=blog.gitguardian.com\" }, [\n      /*#__PURE__*/_createElementVNode(\"strong\", null, \"GitGuardian Shield\")\n    ]),\n    /*#__PURE__*/_createTextVNode(\" to help with scanning for security vulnerabilities.\")\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"typescript\" }, [\n    /*#__PURE__*/_createTextVNode(\"Typescript\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#typescript\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"Typescript is a superset of JavaScript that adds static typing to the language. By manipulating variables and functions, Typescript can help catch errors before they occur.\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"table-responsive\" }, [\n    /*#__PURE__*/_createElementVNode(\"table\", { class: \"markbind-table table table-bordered table-striped\" }, [\n      /*#__PURE__*/_createElementVNode(\"thead\", null, [\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"th\", null, \"Syntax\"),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"th\", null, \"Feature\")\n        ])\n      ]),\n      /*#__PURE__*/_createTextVNode(),\n      /*#__PURE__*/_createElementVNode(\"tbody\", null, [\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"?\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Optional chaining operator\"),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"variable returns undefined if doesn't exist. Also used for optional function parameters or class properties\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"??\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Nullish coalescing operator\"),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"returns the right-hand operand when the left-hand operand is null or undefined.\")\n        ]),\n        /*#__PURE__*/_createTextVNode(),\n        /*#__PURE__*/_createElementVNode(\"tr\", null, [\n          /*#__PURE__*/_createElementVNode(\"td\", null, [\n            /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"!\")\n          ]),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"Non-null assertion operator\"),\n          /*#__PURE__*/_createTextVNode(),\n          /*#__PURE__*/_createElementVNode(\"td\", null, \"variable is not null or undefined, only used if you are sure that value will exist.\")\n        ])\n      ])\n    ])\n  ]),\n  /*#__PURE__*/_createElementVNode(\"h3\", { id: \"process-of-upgrading-dependencies-and-packages\" }, [\n    /*#__PURE__*/_createTextVNode(\"Process of upgrading dependencies and packages\"),\n    /*#__PURE__*/_createElementVNode(\"a\", {\n      class: \"fa fa-anchor\",\n      href: \"#process-of-upgrading-dependencies-and-packages\",\n      onclick: \"event.stopPropagation()\"\n    })\n  ]),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"p\", null, \"MarkBind uses a monorepo structure, which means that multiple packages are contained in a single repository.\\nThe process of upgrading dependencies and packages in MarkBind involves the following steps:\"),\n  /*#__PURE__*/_createTextVNode(),\n  /*#__PURE__*/_createElementVNode(\"ol\", null, [\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Checking current versions\"),\n        /*#__PURE__*/_createTextVNode(\": Check the current versions of the dependencies and packages in the project. This can be done by looking at the \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"package.json\"),\n        /*#__PURE__*/_createTextVNode(\" file for each project. The command \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"npm ls package_name\"),\n        /*#__PURE__*/_createTextVNode(\" will output which packages are using what versions.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Review changelog and documentation\"),\n        /*#__PURE__*/_createTextVNode(\": Review the changelog and documentation for the dependencies and packages to see what changes have been made in the new versions.\")\n      ])\n    ]),\n    /*#__PURE__*/_createTextVNode(),\n    /*#__PURE__*/_createElementVNode(\"li\", null, [\n      /*#__PURE__*/_createElementVNode(\"p\", null, [\n        /*#__PURE__*/_createElementVNode(\"strong\", null, \"Upgrade dependencies and packages\"),\n        /*#__PURE__*/_createTextVNode(\": Update the relevant \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"package.json\"),\n        /*#__PURE__*/_createTextVNode(\" file or the root one for dependencies across all packages, then run \"),\n        /*#__PURE__*/_createElementVNode(\"code\", { class: \"hljs inline no-lang\" }, \"npm run setup\")\n      ])\n    ])\n  ])\n], -1 /* HOISTED */)\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"div\", { class: \"nav-component slim-scroll\" }, null, -1 /* HOISTED */)\nconst _hoisted_16 = /*#__PURE__*/_createStaticVNode(\"<footer><div class=\\\"text-center\\\"><p>[<strong>This site was generated using <img src=\\\"https://markbind.org/favicon.ico\\\" width=\\\"25\\\"> <a href=\\\"https://markbind.org/\\\">MarkBind 6.0.2</a></strong> on Sat, 25 Oct 2025, 17:41:29 UTC]<br> <span class=\\\"dimmed\\\"><small><small>favicon.ico of this site was made by <a href=\\\"https://www.flaticon.com/authors/smashicons\\\" title=\\\"Smashicons\\\">Smashicons</a> from <a href=\\\"https://www.flaticon.com/\\\" title=\\\"Flaticon\\\">www.flaticon.com</a> is licensed by <a href=\\\"http://creativecommons.org/licenses/by/3.0/\\\" title=\\\"Creative Commons BY 3.0\\\" target=\\\"_blank\\\">CC 3.0 BY</a></small></small></span></p></div></footer>\", 1)\n\nreturn function render(_ctx, _cache) {\n  const _component_dropdown = _resolveComponent(\"dropdown\")\n  const _component_navbar = _resolveComponent(\"navbar\")\n  const _component_overlay_source = _resolveComponent(\"overlay-source\")\n\n  return (_openBlock(), _createElementBlock(_Fragment, null, [\n    _createElementVNode(\"header\", _hoisted_1, [\n      _createVNode(_component_navbar, {\n        placement: \"top\",\n        type: \"primary\"\n      }, {\n        brand: _withCtx(() => [\n          _hoisted_2\n        ]),\n        right: _withCtx(() => [\n          _hoisted_12\n        ]),\n        default: _withCtx(() => [\n          _createTextVNode(),\n          _createVNode(_component_dropdown, { class: \"nav-link\" }, {\n            header: _withCtx(() => [\n              _createTextVNode(\"CS3281\")\n            ]),\n            default: _withCtx(() => [\n              _createTextVNode(),\n              _hoisted_3,\n              _createTextVNode(),\n              _hoisted_4,\n              _createTextVNode(),\n              _hoisted_5,\n              _createTextVNode(),\n              _hoisted_6\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _createTextVNode(),\n          _createVNode(_component_dropdown, { class: \"nav-link\" }, {\n            header: _withCtx(() => [\n              _createTextVNode(\"CS3282\")\n            ]),\n            default: _withCtx(() => [\n              _createTextVNode(),\n              _hoisted_7,\n              _createTextVNode(),\n              _hoisted_8,\n              _createTextVNode(),\n              _hoisted_9\n            ]),\n            _: 1 /* STABLE */\n          }),\n          _createTextVNode(),\n          _hoisted_10,\n          _createTextVNode(),\n          _hoisted_11,\n          _createTextVNode()\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createTextVNode(),\n    _createElementVNode(\"div\", _hoisted_13, [\n      _hoisted_14,\n      _createTextVNode(),\n      _createVNode(_component_overlay_source, {\n        id: \"page-nav\",\n        class: \"fixed-header-padding\",\n        \"tag-name\": \"nav\",\n        to: \"page-nav\"\n      }, {\n        default: _withCtx(() => [\n          _hoisted_15\n        ]),\n        _: 1 /* STABLE */\n      })\n    ]),\n    _createTextVNode(),\n    _hoisted_16\n  ], 64 /* STABLE_FRAGMENT */))\n}");
    var render = renderFn();
  